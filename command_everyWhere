#!/bin/bash


SERVER_LIST='/home/vagrant/servers'
usage() {
   echo "Usage: ${0} [-nsv] [-f FILE] COMMAND"
   echo '  Executes COMMAND as a single command on every server ' 
   echo " -f FILE Use FILE for the list of servers . Default ${SERVER_LIST} . "
   echo ' -n Dry run mode ; display the command that would have been executed and execute it ' 
   echo ' -s Execte the COMMAND using sudo on the remote server . ' 
   echo ' -v verbose mode . Displays the server name before executing COMMAND ' 
   exit 1  
}
SSH_OPTIONS='-o ConnectTimeout=2'
if [[ "${UID}" -eq 0 ]]
then 
 echo 'DO NOT RUN THE SCRIPT AS A ROOT USER ? USE -s'
 usage 
fi 

while getopts f:nsv OPTION #f require argu while nsv don t 
do 
  case ${OPTION} in 
      f) SERVER_LIST="${OTARG}" ;; 
      n) DRY_RUN='true' ;; 
      s) SUDO='sudo' ;; 
      v) VERBOSE='true' ;;
      ?) usage ;; 
   esac 
done 

shift "$(( OPTIND - 1 ))"  #keep the rest of argu 


if [[ "${#}" -lt 1 ]] # after the shift 
then 
   usage 
fi 

COMMAND="${@}"
if [[ ! -e "${SERVER_LIST}" ]]
then 
  echo "Cannot open server list file ${SERVER_LIST}" 
  exit 1 
fi 
EXIT_STATUS='0'
for SERVER in $(cat ${SERVER_LIST}) # loop into the file 
do 
  if [[ $"{VERBOSE}" = 'true' ]] #print the server executed
  then 
    echo "${SERVER}" 
  fi 
  SSH_COMMAND="ssh ${SSH_OPTIONS} ${SERVER} ${SUDO} ${COMMAND}" 
   if [[ "${DRY_RUN}" = 'true' ]] 
   then 
      echo " DRY RUN ; ${SSH_COMMAND} " 
    else 
        ${SSH_COMMAND} 
        SSH_EXIT_STATUS="${?}" 
       if [[ "${SSH_EXIT_STATUS}" -ne 0 ]] 
       then 
          EXIT_STATUS="${SSH_EXIT_STATUS}" 
          echo "Execution on ${SERVER} failed "
       fi
     fi 
done 
exit  ${EXIT_STATUS} 


